# country
on_startup = {
	if = {
		limit = {
			NOT = { has_global_flag = init_done }
		}
		M95 = {
			country_event = { id = init.01 }
		}
		set_global_flag = init_done
	}
	#Effect tester - uncomment the country event to use
	every_country = {
		limit = {
			ai = no
		}
		#country_event = { id = init_test.01 }
	}
}	

# country
on_religion_change = {
	
}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
}

# country
on_colonial_liberation = {

}

# country
on_colonial_reintegration = {
	events = {
		
	}
}

# country
on_peace_actor = {
	events = {
		
	}
}

# country
on_peace_recipient = {
	events = {
		
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	if = {
		limit = {
			ROOT = {
				has_country_flag = prove_mettle
			}
		}
		divide_variable = { which = v_captives_from_war which = v_captives_limit }
		country_event = { id = m_succession.07 }
	}
}

# country
# root = loser country, from = winner country
on_war_lost = {
	
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
	if = { #Captives gain from battle  
		limit = { 
			NOT = { religion_group = christian_group }
		}
		set_variable = { which = v_captives_won value = 0 } 
		ROOT = { #For Winner 
			export_to_variable = {
				which = v_captives_won 
				value = land_forcelimit 
				who = FROM 
			}
			multiply_variable = { which = v_captives_won value = 10 } 
			if = { #For Nahuatl, Oaxacan, Purepecha Religion Groups
				limit = {
					NOT = { religion_group = maya_group } 
				}
				
				set_variable = { which = v_elite_captives_won which = v_captives_won } 
				set_variable = { which = v_common_captives_won which = v_captives_won } 
				multiply_variable = { which = v_elite_captives_won value = 0.10 }
				multiply_variable = { which = v_common_captives_won value = 0.90 } 
				
				change_variable = { which = v_total_captives which = v_elite_captives_won }
				change_variable = { which = v_total_captives which = v_common_captives_won }
				change_variable = { which = v_elite_captives which = v_elite_captives_won }
				change_variable = { which = v_common_captives which = v_common_captives_won } 
				
				change_variable = { which = v_captives_from_war which = v_captives_won } 
				
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						subtract_variable = { which = v_common_captives value = 1 } 
						subtract_variable = { which = v_total_captives value = 1 }
					} 
				}
			}
			else_if = { #For Maya Religion Group 
				limit = {
					religion_group = maya_group  
				}
				set_variable = { which = v_elite_captives_won which = v_captives_won } 
				multiply_variable = { which = v_elite_captives_won value = 0.15 }
				
				change_variable = { which = v_total_captives which = v_elite_captives_won }
				change_variable = { which = v_elite_captives which = v_elite_captives_won }
				
				change_variable = { which = v_captives_from_war which = v_captives_won } 
				
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						change_variable = { which = v_elite_captives value = -1 }
						change_variable = { which = v_total_captives value = -1 }
					} 
				}
			}
		}
		
		FROM = { #For Loser 
			export_to_variable = {
				which = v_captives_won 
				value = land_forcelimit 
				who = ROOT 
			}
			multiply_variable = { which = v_captives_won value = 2 } 
			if = { #For Nahuatl, Oaxacan, Purepecha Religion Groups
				limit = {
					NOT = { religion_group = maya_group } 
				}
				set_variable = { which = v_elite_captives_won which = v_captives_won } 
				set_variable = { which = v_common_captives_won which = v_captives_won }
				multiply_variable = { which = v_elite_captives_won value = 0.10 }
				multiply_variable = { which = v_common_captives_won value = 0.90 } 
				
				change_variable = { which = v_total_captives which = v_elite_captives_won }
				change_variable = { which = v_total_captives which = v_common_captives_won }
				change_variable = { which = v_elite_captives which = v_elite_captives_won }
				change_variable = { which = v_common_captives which = v_common_captives_won } 
				
				change_variable = { which = v_captives_from_war which = v_captives_won } 
				
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						subtract_variable = { which = v_common_captives value = 1 }
						subtract_variable = { which = v_total_captives value = 1 }
					} 
				}
			}
			else_if = { #For Maya Religion Group 
				limit = {
					religion_group = maya_group  
				}
				set_variable = { which = v_elite_captives_won which = v_captives_won } 
				multiply_variable = { which = v_elite_captives_won value = 0.15 }
				
				change_variable = { which = v_total_captives which = v_elite_captives_won }
				change_variable = { which = v_elite_captives which = v_elite_captives_won }
				
				change_variable = { which = v_captives_from_war which = v_captives_won } 
				
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						change_variable = { which = v_elite_captives value = -1 }
						change_variable = { which = v_total_captives value = -1 }
					} 
				}
			}
		}
		
	}
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	
}

# province
# root = location, from = loser country
on_battle_won_province = {
	random_events = {

	}
}

#Unit Scope OnAction for Battle Won
on_battle_won_unit = {
	if = {
		limit = {
			unit_owner = { ai = no } #Scopes to Unit Owner from Unit Scope
			general_with_steam_name = yes #Unit Scope Trigger
		}
		unit_owner = { set_country_flag = general_with_steam_name_won_battle }
	}
}

# #Unit Scope OnAction for Battle Lost
on_battle_lost_unit = {
	
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	random_events = {
		
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	
}

# country
# root = losing country, from = location
on_siege_lost_country = {
}

# province
# root = location, from = losing country
on_siege_won_province = {
	
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	if = { 
		limit = { 
			FROM = {
				NOT = { tag = REB } 
			}
		}
		remove_province_modifier = provincial_antagonism
		add_province_modifier = {
			name = recent_rebellion 
			duration = 1825
		}
	}
	
	if = { 
		limit = {
			NOT = { religion_group = christian_group } 
		}
		FROM = { #Captives gain for winner of siege 
			export_to_variable = { 
				which = v_captives_won
				value = development
				who = ROOT 
			}
			if = { 
				limit = { 
					NOT = { religion_group = maya_group } 
				}
				while = { 
					limit = { 
						check_variable = { which = v_captives_won value = 0 } 
					}
					change_variable = { which = v_captives_won value = -1 }
					random_list = {
						90 = {
							change_variable = { which = v_common_captives value = 4 }
							change_variable = { which = v_total_captives value = 4 } 
							change_variable = { which = v_captives_from_war value = 4 } 
						}
						10 = {
							change_variable = { which = v_elite_captives value = 1 }
							change_variable = { which = v_total_captives value = 1 } 
							change_variable = { which = v_captives_from_war value = 1 } 
						}
					}
				}
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						subtract_variable = { which = v_common_captives value = 1 }
						subtract_variable = { which = v_total_captives value = 1 }
					} 
				}
			}
			
			if = { 
				limit = { 
					religion_group = maya_group 
				}
				while = { 
					limit = { 
						check_variable = { which = v_captives_won value = 0 } 
					}
					change_variable = { which = v_captives_won value = -1 }
					random = {
						chance = 15
						
						change_variable = { which = v_elite_captives value = 1 }
						change_variable = { which = v_total_captives value = 1 } 
						change_variable = { which = v_captives_from_war value = 1 } 
					}
				}
				if = { #Ensures captives do not go over limit 
					limit = { 
						check_variable = { which = v_total_captives which = v_captives_limit } 
					}
					while = { 
						limit = { 
							check_variable = { which = v_total_captives which = v_captives_limit } 
						}
						subtract_variable = { which = v_elite_captives value = 1 }
						subtract_variable = { which = v_total_captives value = 1 }
					} 
				}
			}
		}
		
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country 
on_new_monarch = {
	events = {
		
	}
	random_events = { 
		
	}
}

on_new_consort = {
	
}

# country
on_monarch_death = {
	if = {
		limit = {
			government = absolute_elective_monarchy 
			NOT = { has_country_modifier = deliberations_of_the_council }
		}
		country_event = { id = m_succession.03 }
	}
	if = {
		limit = {
			government = absolute_hereditary_monarchy
			NOT = { check_variable = { which = v_terr_hege value = 0 } }
			total_development = 100
			#total_development = 500
		}
		country_event = { id = m_succession.06 days = 30 }
	}
	
	#Part of a flavor event for Tenochtitlan and Tlatelolco
	if = { 
		limit = { 
			tag = AAB
			NOT = { has_country_flag = quauhtlatoatzin_died } 
		}
		if = { 
			limit = { 
				exists = AAA
			}
			AAA = { 
				country_event = { id = flav_ten_minors.09 }
			}
		}
		if = { 
			limit = { 
				exists = Z02 
			}
			Z02 = { 
				country_event = { id = flav_ten_minors.09 }
			}
		}
	}
}

# country 
on_regent = {
	events = {
		
	}
}

# country 
on_new_term_election = {
	events = {
		
	}
}

# country 
on_death_election = {
	events = {
		
	}
}

# country
on_death_foreign_slave_ruler = {
	events = {
	}
}

# country 
on_replace_governor = {
	events = {
		
	}
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	FROM = {
		change_variable = { which = v_terr_hege_change value = 5 }
	}
}

# country
on_heir_death = {
	
}

# country
on_queen_death = {
	
}

# country
on_new_heir = {
}

# country 
on_weak_heir_claim = {
	events = {
	
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
	
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	events = {
		
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
	
	}
}

on_change_hre_religion = {
	events = {
		
	}
}

on_hre_religion_white_peace = {
	events = {
	
	}
}

# When a non-native changes government type
on_government_change = {
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		
	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	events = {
		
	}
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	
}

on_dismantle_revolution = {

}

# province
on_adm_development = {
}

# province
on_dip_development = {
}

# province
on_mil_development = {
}

on_overextension_pulse = {
	random_events = {
	
	}
}


on_colonial_pulse = {
	random_events = {
	
	}
}

on_siberian_pulse = {
}

# country random events
on_bi_yearly_pulse = {
	random_events = {
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
	}
}

on_bi_yearly_pulse_3 = {
}

on_bi_yearly_pulse_4 = {
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
	}
}

on_thri_yearly_pulse_2 = {
	random_events = {
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		
	}
}

on_four_year_pulse = {
	random_events = {
	}
}

on_four_year_pulse_2 = {
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
	random_events = {
	}
	
	events = {
	}
}


# Estates pulse
on_five_year_pulse_2 = {
	random_events = {	
	}
}

on_five_year_pulse_3 = {
}

on_five_year_pulse_4 = {
}

# El Dorado
on_explore_coast = {
	random_events = {
	}
}
on_conquistador_empty = {
	random_events = {
	}
}

on_conquistador_native = {
	random_events = {
	}
}

on_buy_religious_reform = {
	events = {
	}
}

on_circumnavigation = {
	events = {
	}
}

on_become_free_city = {
	events = {
	
	}
}

on_remove_free_city = {
	events = {
		
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
}

on_revoke_estate_land = {

}

on_grant_estate_land = {
}

on_death_has_harem = {

}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {

}

# country
on_gain_great_power_status = {

}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted = {
	FROM = {
		change_variable = { which = v_terr_hege_change value = 0.5 }
	}
}

# province
on_province_culture_converted = {
	FROM = {
		change_variable = { which = v_terr_hege_change value = 0.5 }
	}
}

# THIS = Province, FROM = Country who Propogated
on_convert_by_trade_policy = {
	
}

# province
# FROM = old owner
on_province_owner_change = {
	events = {
	
	}
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

# country
on_harmonized_pagan = {
	events = {
	
	}
}
on_harmonized_christian = {
	events = {
		
	}
}
on_harmonized_muslim = {
	events = {
		
	}
}
on_harmonized_jewish_group = {
	events = {
	
	}
}
on_harmonized_zoroastrian_group = {
	events = {
		
	}
}
on_harmonized_dharmic = {
	events = {
		
	}
}
on_harmonized_mahayana = {
	events = {
	
	}
}
on_harmonized_buddhism = { #Theravada
	events = {
		
	}	
}
on_harmonized_shinto = {
	events = {
	
	}
}
on_harmonized_vajrayana = {
	events = {
		
	}
}


# country
on_russian_sudebnik = {

}

# country
on_russian_oprichnina = {

}

# country
on_russian_streltsy = {

}

# province
on_consecrate_patriarch = {
}

# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}

# country
on_leader_recruited = {
}

# country
on_general_recruited = {

}

# country
on_admiral_recruited = {
}

# country
on_conquistador_recruited = {
}

# country
on_explorer_recruited = {
}

# THIS = Province, FROM = Country
on_regiment_recruited = {
	
}

# THIS = Province, FROM = Country
on_mercenary_recruited = {

}

# THIS = One province in the state
on_add_pasha = {
}

# THIS = One province in the state
on_remove_pasha = {

}

# THIS = Province
on_janissaries_raised = {
}