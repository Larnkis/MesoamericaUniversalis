# country
on_startup = {
	every_country = {
		limit = {
			ai = no
		}
		#country_event = { id = init_test.01 }
	}
}

# country
on_religion_change = {
	
}

# country.
on_secondary_religion_change = {
	# Done from code: add_prestige = -50 (Define: CHANGE_SECONDARY_PRESTIGE_HIT)
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
}

# country
on_colonial_liberation = {

}

# country
on_colonial_reintegration = {
	events = {
		
	}
}

# country
on_peace_actor = {
	events = {
		
	}
}

# country
on_peace_recipient = {
	events = {
		
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	
}

# country
# root = loser country, from = winner country
on_war_lost = {
	
}

# country
# root = winning country, from = loser country
on_battle_won_country = {
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	random_events = {
	
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	random_events = {

	}
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	random_events = {
		
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	events = {
		
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
}

# province
# root = location, from = losing country
on_siege_won_province = {
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	events = {
		
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# OBS: Consider that the following on_actions can be called for Personal Union juniors as well.
# country 
on_new_monarch = {
	events = {
		
	}
	random_events = { 
		
	}
}

on_new_consort = {
	
}

# country
on_monarch_death = {
	events = {
		
	}
}

# country 
on_regent = {
	events = {
		
	}
}

# country 
on_new_term_election = {
	events = {
		
	}
}

# country 
on_death_election = {
	events = {
		
	}
}

# country 
on_replace_governor = {
	events = {
		
	}
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		
	}
}

# country
on_heir_death = {
	
}

# country
on_queen_death = {
	
}

# country
on_new_heir = {
}

# country 
on_weak_heir_claim = {
	events = {
	
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
	
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	events = {
		
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# HRE member transferred from non-HRE vassalage to Emperor
on_hre_transfered_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

on_lock_hre_religion = {
	events = {
	
	}
}

on_change_hre_religion = {
	events = {
		
	}
}

on_hre_religion_white_peace = {
	events = {
	
	}
}

# When a non-native changes government type
on_government_change = {
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		
	}
}

# Nation annexed.
# FROM is the nation being annexed
on_annexed = {
	events = {
		
	}
}

# When the chinese empire gets dismantled (e.g. when the emperor is annexed)
# FROM = Emperor, ROOT = Current Nation
on_chinese_empire_dismantled = {
	events = {
		
	}
}

# When a nation gains the Mandate of Heaven (becomes the Emperor of China)
# FROM = Old Emperor, ROOT = New Emperor
on_mandate_of_heaven_gained = {
	
}

# When a nation loses the Mandate of Heaven
# FROM = New Emperor, ROOT = Old Emperor
on_mandate_of_heaven_lost = {
	
}

on_dismantle_revolution = {

}

# province
on_adm_development = {
}

# province
on_dip_development = {
}

# province
on_mil_development = {
}

on_overextension_pulse = {
	random_events = {
	
	}
}


on_colonial_pulse = {
	random_events = {
	
	}
}

# country random events
on_bi_yearly_pulse = {
	random_events = {
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
	}
}

on_bi_yearly_pulse_3 = {
}

on_bi_yearly_pulse_4 = {
}

# country random events
on_thri_yearly_pulse = {
	random_events = {
	}
}

on_thri_yearly_pulse_2 = {
	random_events = {
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
	}
}

on_thri_yearly_pulse_4 = {
	random_events = {
		
	}
}

on_four_year_pulse = {
	random_events = {
	}
}

on_four_year_pulse_2 = {
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
	random_events = {
	}
	
	events = {
	}
}


# Estates pulse
on_five_year_pulse_2 = {
	random_events = {	
	}
}

on_five_year_pulse_3 = {
}

on_five_year_pulse_4 = {
}

# El Dorado
on_explore_coast = {
	random_events = {
	}
}
on_conquistador_empty = {
	random_events = {
	}
}

on_conquistador_native = {
	random_events = {
	}
}

on_buy_religious_reform = {
	events = {
	}
}

on_circumnavigation = {
	events = {
	}
}

on_become_free_city = {
	events = {
	
	}
}

on_remove_free_city = {
	events = {
		
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
}

on_revoke_estate_land = {

}

on_grant_estate_land = {
}

on_death_has_harem = {

}

on_select_heir_from_harem = {
}

on_fetishist_cult_change = {

}

# country
on_gain_great_power_status = {

}

# country
on_lose_great_power_status = {
}

# province
on_province_religion_converted = {
}

# province
on_province_culture_converted = {
}

# province
# FROM = old owner
on_province_owner_change = {
	events = {
	
	}
}

# country
on_parliament_debate_failed = {
}

# country
on_parliament_debate_succeeded = {
}

# country
on_harmonized_pagan = {
	events = {
	
	}
}
on_harmonized_christian = {
	events = {
		
	}
}
on_harmonized_muslim = {
	events = {
		
	}
}
on_harmonized_jewish_group = {
	events = {
	
	}
}
on_harmonized_zoroastrian_group = {
	events = {
		
	}
}
on_harmonized_dharmic = {
	events = {
		
	}
}
on_harmonized_mahayana = {
	events = {
	
	}
}
on_harmonized_buddhism = { #Theravada
	events = {
		
	}	
}
on_harmonized_shinto = {
	events = {
	
	}
}
on_harmonized_vajrayana = {
	events = {
		
	}
}


# country. from = overlord
on_accept_tribute = {
}

# country. from = overlord
on_refuse_tribute = {
}