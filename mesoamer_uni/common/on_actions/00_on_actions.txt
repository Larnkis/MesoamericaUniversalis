# country
on_startup = {
	events = {
		init.01
	}
}

# country
on_religion_change = {
	
}

# country.
on_secondary_religion_change = {
	
}

# country. Spawned when Enforcing Rebel Demands through a Support Rebels-war.
on_enforce_rebel_demands = {
	# ROOT = The winning country
	# FROM = The loosing country
	set_country_flag = helped_rebels_win_war
}

# country
on_colonial_liberation = {
	
}

# country
on_colonial_reintegration = {
	events = {
		
	}
}

# country
on_peace_actor = {
	events = {
		
	}
}

# country
on_peace_recipient = {
	events = {
		
	}
}

# country
# root = winning country, from = loser country
on_war_won = {
	ROOT = {
		country_event = { id = commeff.01}
	}
	FROM = {
		country_event = { id = commeff.01}
	}
	ROOT = {
		change_variable = { which = militancy value = 1 }
	}
}

# country
# root = loser country, from = winner country
on_war_lost = {
	ROOT = {
		if = {
			limit = { 
				is_rival = FROM
			}
		}
		change_variable = { which = militancy value = 10 }
	}
	ROOT = {
		if = {
			limit = { 
				NOT = { is_rival = FROM }
			}
		}
		change_variable = { which = militancy value = -2 }
	}
	ROOT = {
		add_legitimacy = -15
	}
	FROM = { 
		add_legitimacy = 5
	}
}	

# country
# root = winning country, from = loser country
on_battle_won_country = {
	if = {
		limit = {
			religion = newnahuatl
		}
		country_event = { id = captives.01 }
	}
	
	add_legitimacy = 2.5
	if = {
		limit = {
			has_idea = militaristic_propaganda
		}
		add_legitimacy = 2.5
	}
	if = {
		limit = {
			has_idea = warcouncil
		}
		add_legitimacy = 2.5
	}
}

# country
# root = loser country, from = winner country
on_battle_lost_country = {
	add_legitimacy = -2.5
	if = {
		limit = {
			has_idea = militaristic_propaganda
		}
		add_legitimacy = -2.5
	}
	if = {
		limit = {
			has_idea = warcouncil
		}
		add_legitimacy = -2.5
	}
	random_events = {
		90 = 0
		10 = friendship_events.1 #Historical Friendship Broken
	}
}

# province
# root = location, from = loser country
on_battle_won_province = {
	random_events = {
		
	}
}

# province
# root = location, from = country doing it
on_added_to_trade_company ={

}

# province
# root = location, from = country doing it
on_removed_from_company ={

}

# province
# root = location, from = country doing it
on_company_formed ={

}

# province
# root = location, from = country doing it
on_company_disolved ={

}

# province
# root = location, from = winner country
on_battle_lost_province = {
	random_events = {
		
	}
}

# country
# root = winning country, from = location
on_siege_won_country = {
	events = {
		
	}
}

# country
# root = losing country, from = location
on_siege_lost_country = {
}

# province
# root = location, from = losing country
on_siege_won_province = {
	if = {
		limit = {
			ROOT = { 
				has_province_modifier = annihilated_by_war
			}
		}
		ROOT = {
			export_to_variable = { 
				which = sack_deaths_e
				value = base_tax
			}
			
			export_to_variable = { 
				which = sack_deaths_a
				value = base_production
			}
			
			export_to_variable = { 
				which = sack_deaths_c
				value = base_manpower
			}
			
			multiply_variable = { 
				which = sack_deaths_e
				value = 0.08
			}
			
			multiply_variable = { 
				which = sack_deaths_a
				value = 0.08
			}
			
			multiply_variable = { 
				which = sack_deaths_c
				value = 0.08
			}
			
			while = {
				limit = {
					check_variable = {
						which = sack_deaths_e 
						value = 0
					}
				}
				add_base_tax = -1
				subtract_variable = {
					which = sack_deaths_e
					value = 1
				}
			}
			
			while = {
				limit = {
					check_variable = {
						which = sack_deaths_a
						value = 0
					}
				}
				add_base_production = -1
				subtract_variable = {
					which = sack_deaths_a
					value = 1
				}
			}
			
			while = {
				limit = {
					check_variable = {
						which = sack_deaths_c
						value = 0
					}
				}
				add_base_manpower = -1
				subtract_variable = {
					which = sack_deaths_c
					value = 1
				}
			}
			
			subtract_variable = { which = sack_deaths_e which = sack_deaths_e }
			subtract_variable = { which = sack_deaths_a which = sack_deaths_a }
			subtract_variable = { which = sack_deaths_c which = sack_deaths_c }
		}
		add_permanent_province_modifier = {
			name = annihilated_by_war
			duration = 5840
		}
	}
	
	if = {
		limit = {
			ROOT = { 
				has_province_modifier = devestated_by_war
			}
		}
		add_permanent_province_modifier = {
			name = annihilated_by_war
			duration = 5840
		}
		remove_province_modifier = devestated_by_war
	}
	
	if = {
		limit = {
			ROOT = { 
				has_province_modifier = damaged_by_war
			}
		}
		add_permanent_province_modifier = {
			name = devestated_by_war
			duration = 2920
		}
		remove_province_modifier = damaged_by_war
	}
	
	if = {
		limit = {
			ROOT = { 
				NOT = {
					OR = {
						has_province_modifier = damaged_by_war
						has_province_modifier = devestated_by_war
						has_province_modifier = annihilated_by_war
					}
				}
			}
		}
		add_permanent_province_modifier = {
			name = damaged_by_war
			duration = 1460
		}
	}
}

# province
# root = location, from = winning country
on_siege_lost_province =  {
	events = {
		war_of_the_roses.10		# Lancaster Stronghold
		war_of_the_roses.11		# York Stronghold
		french_wars_of_religion.7 #Ravening Religious Fanatics
		french_wars_of_religion.9 #french_wars_of_religion.9
	}
}

# province
# root = location, from = country that abandons colony
# Fired right before the colony is abandoned.
on_abandon_colony = {
}

# country 
on_new_monarch = {
	events = {
	}
	random_events = { 
		
	}
}

# country
on_monarch_death = {
	
	if = {
		limit = {
			NOT = { has_idea = extensive_bureaucracy }
		}
		add_legitimacy = -15
	}
	if = {
		limit = {
			has_idea = royal_deification
		}
		add_legitimacy = -30
	}
	#Elective Succession
	if = {
		limit = {
			OR = {
				government = altepetl
				government = tribal_confederation 
				government = tlaxcallan_confederate 
				government = centralized_altepetl
			}
			ai = no
			NOT = {
				has_country_modifier = deliberations_of_the_council
			}
		}
		ROOT = {
			country_event = { id = esuccession.01 }
		}
	}
	
	#Direct Succession
	if = {
		limit = {
			OR = {
				government = ttt_subordinate_lordship 
				government = feudal_chiefdom 
				government = kuchkabal 
				government = mayapan 
			}
			ai = no
		}
		ROOT = {
			country_event = { id = dsuccession.01 }
		}
	}
}

# country 
on_regent = {
	events = {
		
	}
}

# country 
on_new_term_election = {
	events = {
		
	}
}

# country 
on_death_election = {
	events = {
		
	}
}

# country 
on_replace_governor = {
	events = {
		
	}
}


# country
on_bankruptcy = {
}

# country (country annexing, root = target)
on_diplomatic_annex = {
	events = {
		
	}
}

# country
on_heir_death = {
	country_event = { id = gsuccession.01 }
}

# country
on_new_heir = {
}

# country 
on_weak_heir_claim = {
	events = {
	
	}
}

# country : no heir in theocracy
on_heir_needed_theocracy = {
	events = {
		
	}
}

# Emperor from same dynasty
on_successive_emperor = {
	events = {
		
	}
}

# HRE Prince released by the emperor
on_released_hre_member = {
	events = {
	}
}

# HRE Prince converts to non-Emperor religion
on_hre_member_false_religion = {
	events = {
	}
}

# HRE Prince converts to Emperor religion
on_hre_member_true_religion = {
	events = {
	}
}

# Emperor wins HRE defensive war
on_hre_wins_defensive_war = {
	events = {
	}
}

# HRE member annexed by non-HRE country
on_hre_member_annexed = {
	events = {
	}
}

# HRE member released from non-HRE vassalage
on_hre_released_vassal = {
	events = {
	}
}

# Emperor coming to the defense of a HRE member
on_hre_defense = {
	events = {
	}
}

# Emperor NOT coming to the defense of a HRE member
on_hre_non_defense = {
	events = {
		
	}
}

# HRE Member takes a HRE province from an outs100e country in a peace (province scope)
on_hre_province_reconquest = {
	events = {
	}
}

# When a native changes government after filling all their advancement groups.
on_native_change_government = {
}

# Nation is integrated after being in union
on_integrate = {
	events = {
		
	}
}

# Nation annexed
on_annexed = {	
	events = {
		
	}
}

# Nation westernized
# root = country
on_westernized = {
	events = {
		
	}
}

on_dismantle_revolution = {
	
}

on_lock_hre_religion = {
	
}

on_change_hre_religion = {
	events = {
		
	}
}

on_hre_religion_white_peace = {
	events = {
		
	}
}

# province
on_adm_development = {
}

# province
on_dip_development = {
}

# province
on_mil_development = {
}

on_overextension_pulse = {
	random_events = {
	}
}

on_westernisation_pulse = {
	random_events = {
	}
}

on_colonial_pulse = {
	random_events = {
	}
}

# country random events
on_bi_yearly_pulse = {
	random_events = {
		
	}
}

on_bi_yearly_pulse_2 = {
	random_events = {
		
	}
}

on_bi_yearly_pulse_3 = {
}

on_bi_yearly_pulse_4 = {
}

# country random events
on_thri_yearly_pulse = {
}

on_thri_yearly_pulse_2 = {
	random_events = {
	}
}

on_thri_yearly_pulse_3 = {
	random_events = {
	}
}

on_thri_yearly_pulse_4 = {
}

on_four_year_pulse = {
	random_events = {
	}
}

on_four_year_pulse_2 = {
}

on_four_year_pulse_3 = {
}

on_four_year_pulse_4 = {
}

on_five_year_pulse = {
	random_events = {
	}
	
	events = {
	}
}


# Estates pulse
on_five_year_pulse_2 = {
	random_events = {	           
	}
}

on_five_year_pulse_3 = {
}

on_five_year_pulse_4 = {
}

# El Dorado
on_explore_coast = {
	random_events = {
	}
}
on_conquistador_empty = {
	random_events = {
	}
}

on_conquistador_native = {
	random_events = {
	}
}

on_buy_religious_reform = {
	events = {
	}
}

on_circumnavigation = {
	events = {
	}
}

on_become_free_city = {
	events = {
	}
}

on_remove_free_city = {
	events = {
	}
}

on_revoke_estate_land_ai = { #AI can't handle the rebels atm or perform a gradual revoke, sorry
}

on_revoke_estate_land = {
}

on_grant_estate_land = {
}